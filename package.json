{
  "name": "dev-manager",
  "displayName": "dev-manager",
  "description": "",
  "version": "0.0.1",
  "publisher": "dev-manager",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "dev-manager",
          "title": "Dev Manager",
          "icon": "media/dependency.svg"
        }
      ]
    },
    "views": {
      "dev-manager": [
        {
          "id": "devManagerProjects",
          "name": "Projects",
          "icon": "media/dependency.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "dev-manager.refreshProjects",
        "title": "Refresh Projects",
        "icon": "$(refresh)"
      },
      {
        "command": "dev-manager.installDependencies",
        "title": "Install Dependencies",
        "icon": "$(cloud-download)"
      },
      {
        "command": "dev-manager.updateDependencies",
        "title": "Update Dependencies",
        "icon": "$(arrow-up)"
      },
      {
        "command": "dev-manager.cleanNodeModules",
        "title": "Clean node_modules",
        "icon": "$(trash)"
      },
      {
        "command": "dev-manager.installAllDependencies",
        "title": "Install All Dependencies",
        "icon": "$(cloud-download)"
      },
      {
        "command": "dev-manager.updateAllDependencies",
        "title": "Update All Dependencies",
        "icon": "$(arrow-up)"
      },
      {
        "command": "dev-manager.changePackageManager",
        "title": "Change Package Manager"
      },
      {
        "command": "dev-manager.showPackageManagerPicker",
        "title": "Select Package Manager"
      },
      {
        "command": "dev-manager.showDependencyVersionPicker",
        "title": "Change Dependency Version"
      },
      {
        "command": "dev-manager.addDependency",
        "title": "Add Dependency",
        "icon": "$(add)"
      },
      {
        "command": "dev-manager.removeDependency",
        "title": "Remove Dependency",
        "icon": "$(trash)"
      },
      {
        "command": "dev-manager.runScript",
        "title": "Run Script",
        "icon": "$(play)"
      },
      {
        "command": "dev-manager.changeUpdateNotificationSettings",
        "title": "Change Update Notification Settings",
        "icon": "$(bell)"
      },
      {
        "command": "dev-manager.setProjectUpdateNotifications",
        "title": "Set Project Update Notifications",
        "icon": "$(bell)"
      },
      {
        "command": "dev-manager.changeLicense",
        "title": "Change Project License",
        "icon": "$(law)"
      },
      {
        "command": "dev-manager.fetchWebpage",
        "title": "Fetch Webpage",
        "icon": "$(globe)"
      },
      {
        "command": "dev-manager.analyzePackageSize",
        "title": "Analyze Package Size",
        "icon": "$(graph)"
      },
      {
        "command": "dev-manager.analyzeDependenciesSizes",
        "title": "Analyze All Dependencies Sizes",
        "icon": "$(graph)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "dev-manager.refreshProjects",
          "when": "view == devManagerProjects",
          "group": "navigation@1"
        },
        {
          "command": "dev-manager.analyzeDependenciesSizes",
          "when": "view == devManagerProjects",
          "group": "navigation@2"
        },
        {
          "command": "dev-manager.installAllDependencies",
          "when": "view == devManagerProjects",
          "group": "1_modification"
        },
        {
          "command": "dev-manager.updateAllDependencies",
          "when": "view == devManagerProjects",
          "group": "1_modification"
        }
      ],
      "view/item/context": [
        {
          "command": "dev-manager.installDependencies",
          "when": "view == devManagerProjects && viewItem == project",
          "group": "inline"
        },
        {
          "command": "dev-manager.updateDependencies",
          "when": "view == devManagerProjects && viewItem == project",
          "group": "inline"
        },
        {
          "command": "dev-manager.cleanNodeModules",
          "when": "view == devManagerProjects && viewItem == project",
          "group": "2_modification"
        },
        {
          "command": "dev-manager.analyzeDependenciesSizes",
          "when": "view == devManagerProjects && viewItem == project",
          "group": "inline"
        },
        {
          "command": "dev-manager.addDependency",
          "when": "view == devManagerProjects && viewItem == dependencyGroup",
          "group": "inline"
        },
        {
          "command": "dev-manager.removeDependency",
          "when": "view == devManagerProjects && (viewItem == dependency || viewItem == devDependency)",
          "group": "inline"
        },
        {
          "command": "dev-manager.runScript",
          "when": "view == devManagerProjects && viewItem == script",
          "group": "inline"
        },
        {
          "command": "dev-manager.changeUpdateNotificationSettings",
          "when": "view == devManagerProjects && viewItem == updateSettings",
          "group": "inline"
        },
        {
          "command": "dev-manager.setProjectUpdateNotifications",
          "when": "view == devManagerProjects && viewItem == project",
          "group": "2_modification"
        },
        {
          "command": "dev-manager.changeLicense",
          "when": "view == devManagerProjects && viewItem == license",
          "group": "inline"
        },
        {
          "command": "dev-manager.analyzePackageSize",
          "when": "view == devManagerProjects && (viewItem == dependency || viewItem == devDependency)",
          "group": "inline"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test",
    "format": "prettier --write .",
    "prepare": "husky"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/semver": "^7.5.8",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "esbuild": "^0.25.0",
    "eslint": "^9.21.0",
    "husky": "^9.1.7",
    "lint-staged": "^15.5.0",
    "npm-run-all": "^4.1.5",
    "prettier": "3.5.3",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "@octokit/rest": "^21.1.1",
    "semver": "^7.7.1"
  },
  "lint-staged": {
    "**/*": "prettier --write --ignore-unknown"
  }
}
